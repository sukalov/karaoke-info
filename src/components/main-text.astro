---

---

<div class="relative pt-8 md:h-0 md:p-0 md:pl-4 overflow-visible">
  <section
    class="fast-div relative md:absolute opacity-85 mx-2 rounded-[3rem] bg-default p-8 md:mr-auto md:w-[22rem] md:p-10 lg:w-[min(50vw,48rem)] lg:p-16"
  >
    <div class="opacity-none">
      <p class="text-balance text-default">
        Живое караоке – формат, в котором все желающие могут исполнить песню в
        микрофон под аккомпанемент ансамбля. Басист, пианист и ударник играют
        песни, которые люди выбирают из
        <a
          class="gradient-text hover:text-green-300"
          href="https://karaoke.sukalov.dev">музыкального меню</a
        >, записываются через бота в телеграме и по очереди выходят петь, а петь
        можно всем!
        <br />
        <br />
        Ударник выступает и ведущим, он ведёт мероприятие, приглашает выступающих
        из списка, вставляет свои реплики и раскачивает зал. Выступающий поет в микрофон
        и чувствует себя практически артистом, люди вокруг вовлечены и подпевают
        ему. Образуется общее веселое поле и праздник, а где-то даже терапия. Живое
        караоке регулярно проводится в двух московских рюмочных, также формат обкатан
        на частных праздниках и корпоративах (например, Т-банка).
        <br />
        <br />
        Оптимальный формат проведения — 2 часа.
      </p>
    </div>
  </section>
</div>
<!-- </div> -->
<!-- <style>
  .fast-div {
    transform: translateY(-500px);
  }
</style> -->

<script>
  const isMobile = () => window.innerWidth < 768;

  if (!isMobile()) {
    const fast = document.querySelector(".fast-div") as HTMLElement;

    if (fast) {
      let raf: number | null = null;
      const speedMultiplier = 2.65; // Change this to adjust speed
      const initY = 0;
      let lastScrollY = window.scrollY;
      console.log({ initY, lastScrollY });

      const updatePosition = () => {
        fast.style.transform = `translateY(${initY - window.scrollY * speedMultiplier}px)`;
        raf = null;
      };

      window.addEventListener(
        "scroll",
        () => {
          const currentScrollY = window.scrollY;
          if (Math.abs(currentScrollY - lastScrollY) >= 2) {
            lastScrollY = currentScrollY;
            if (!raf) {
              raf = requestAnimationFrame(updatePosition);
            }
          }
        },
        { passive: true }
      );
    }
  }
</script>

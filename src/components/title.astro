---

---

<div class="title pt-2 md:px-2 md:pt-4">
  <section
    class="relative mx-2 rounded-[3rem] bg-default p-2 opacity-85 md:ml-auto md:h-[calc(100svh-2rem)] md:w-[45vw] lg:w-[35vw]"
  >
    <div
      class="opacity-100 relative top-0 flex h-full w-full flex-col place-items-center justify-around gap-4 p-2"
    >
      <h2 class="flex flex-col items-center gap-2 self-auto sm:gap-4">
        <div
          class="gradient-text text-center font-extrabold tracking-tighter text-8xl sm:text-8xl"
        >
          караоке
          <br /> с живой
          <br /> музыкой
        </div>
      </h2>
      <h3 class="flex flex-col items-center gap-2 self-auto sm:gap-4">
        <div
          class="p-2 text-center font-extrabold tracking-tighter text-offset text-xl sm:text-2xl"
        >
          от московского <br />музыкального <br />синдиката
        </div>
      </h3>
    </div>
  </section>
</div>
<script>
  const isMobile = () => window.innerWidth < 768;

  if (!isMobile()) {
    const block = document.querySelector(".title") as HTMLElement;

    if (block) {
      let raf: number | null = null;
      const speedMultiplier = 2; // Change this to adjust speed
      const initY = 0;
      const waitTime = 256;
      let lastScrollY = window.scrollY;
      console.log({ initY, lastScrollY });
      const updatePosition = () => {
        block.style.transform = `translateY(${window.scrollY}px)`;
        raf = null;
      };
      const updatePosition2 = () => {
        block.style.transform = `translateY(${waitTime - (window.scrollY - waitTime) * 2}px)`;
        raf = null;
      };

      window.addEventListener(
        "scroll",
        () => {
          const currentScrollY = window.scrollY;
          if (Math.abs(currentScrollY - lastScrollY) >= 1) {
            lastScrollY = currentScrollY;
            if (currentScrollY < waitTime && !raf) {
              raf = requestAnimationFrame(updatePosition);
            } else if (currentScrollY < waitTime * 2 && !raf) {
              raf = requestAnimationFrame(updatePosition2);
            }
          }
        },
        { passive: true }
      );
    }
  }
</script>
